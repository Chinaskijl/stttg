
import { useState } from 'react';
import { useGameStore } from '@/lib/store';
import { ResourceType } from '@/shared/marketTypes';
import { getResourceIcon, getResourceName } from '@/lib/resources';
import axios from 'axios';

/**
 * –°–≤–æ–π—Å—Ç–≤–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ª–æ—Ç–∞
 */
interface MarketCreateListingProps {
  onSuccess: () => void;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ª–æ—Ç–∞ –Ω–∞ —Ä—ã–Ω–∫–µ
 * 
 * @param onSuccess - –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ—Ç–∞
 */
export function MarketCreateListing({ onSuccess }: MarketCreateListingProps) {
  const { gameState } = useGameStore();
  const [resourceType, setResourceType] = useState<ResourceType>('food');
  const [amount, setAmount] = useState<number>(1);
  const [pricePerUnit, setPricePerUnit] = useState<number>(10);
  const [listingType, setListingType] = useState<'buy' | 'sell'>('sell');
  const [isDropdownOpen, setIsDropdownOpen] = useState(false);

  // –°–ø–∏—Å–æ–∫ —Ä–µ—Å—É—Ä—Å–æ–≤ –±–µ–∑ –∑–æ–ª–æ—Ç–∞ (—Ç.–∫. —ç—Ç–æ –æ—Å–Ω–æ–≤–Ω–∞—è –≤–∞–ª—é—Ç–∞)
  const availableResources: ResourceType[] = ['food', 'wood', 'oil', 'metal', 'steel', 'weapons'];
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  /**
   * –î–æ—Å—Ç—É–ø–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ—Å—É—Ä—Å–∞
   */
  const availableAmount = gameState.resources[resourceType];

  /**
   * –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ª–æ—Ç–∞
   */
  const totalPrice = amount * pricePerUnit;

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ—Ç–∞
   */
  const canCreateListing = () => {
    if (amount <= 0 || pricePerUnit <= 0) {
      return false;
    }

    if (listingType === 'sell') {
      // –ü—Ä–∏ –ø—Ä–æ–¥–∞–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–µ—Å—É—Ä—Å–∞
      return availableAmount >= amount;
    } else {
      // –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–æ–ª–æ—Ç–∞
      return gameState.resources.gold >= totalPrice;
    }
  };

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ª–æ—Ç–∞
   */
  const handleCreateListing = async () => {
    if (!canCreateListing()) {
      return;
    }

    setLoading(true);
    setError(null);

    try {
      await axios.post('/api/market/create-listing', {
        resourceType,
        amount,
        pricePerUnit,
        type: listingType
      });

      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
      setAmount(1);
      setPricePerUnit(10);
      
      // –í—ã–∑—ã–≤–∞–µ–º –∫–æ–ª–ª–±—ç–∫ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è
      onSuccess();
    } catch (error) {
      console.error('Error creating listing:', error);
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ª–æ—Ç–∞');
    } finally {
      setLoading(false);
    }
  };

  const toggleDropdown = () => {
    setIsDropdownOpen(!isDropdownOpen);
  };

  const selectResource = (resource: ResourceType) => {
    setResourceType(resource);
    setIsDropdownOpen(false);
  };

  return (
    <div className="bg-white rounded-lg shadow p-4">
      <h2 className="text-xl font-semibold mb-4">–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ª–æ—Ç</h2>
      
      {/* –¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏ (–ø—Ä–æ–¥–∞–∂–∞/–ø–æ–∫—É–ø–∫–∞) */}
      <div className="mb-4">
        <label className="block text-sm font-medium text-gray-700 mb-2">–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏</label>
        <div className="flex space-x-2">
          <button
            type="button"
            onClick={() => setListingType('sell')}
            className={`px-4 py-2 rounded ${
              listingType === 'sell' 
                ? 'bg-blue-600 text-white' 
                : 'bg-gray-200 text-gray-800'
            }`}
          >
            –ü—Ä–æ–¥–∞—Ç—å
          </button>
          <button
            type="button"
            onClick={() => setListingType('buy')}
            className={`px-4 py-2 rounded ${
              listingType === 'buy' 
                ? 'bg-blue-600 text-white' 
                : 'bg-gray-200 text-gray-800'
            }`}
          >
            –ö—É–ø–∏—Ç—å
          </button>
        </div>
      </div>
      
      {/* –í—ã–±–æ—Ä —Ä–µ—Å—É—Ä—Å–∞ */}
      <div className="mb-4 relative">
        <label className="block text-sm font-medium text-gray-700 mb-2">–†–µ—Å—É—Ä—Å</label>
        <button
          type="button"
          onClick={toggleDropdown}
          className="relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500"
        >
          <span className="flex items-center">
            <span className="mr-2">{getResourceIcon(resourceType)}</span>
            <span>{getResourceName(resourceType)}</span>
          </span>
          <span className="absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none">
            <svg className="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
              <path fillRule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clipRule="evenodd" />
            </svg>
          </span>
        </button>
        
        {isDropdownOpen && (
          <div className="absolute z-50 mt-1 w-full rounded-md bg-white shadow-lg">
            <ul className="max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm">
              {availableResources.map((resource) => (
                <li
                  key={resource}
                  className="cursor-pointer select-none relative py-2 pl-3 pr-9 hover:bg-blue-100"
                  onClick={() => selectResource(resource)}
                >
                  <div className="flex items-center">
                    <span className="mr-2">{getResourceIcon(resource)}</span>
                    <span className={resourceType === resource ? 'font-semibold' : 'font-normal'}>
                      {getResourceName(resource)}
                    </span>
                  </div>
                  
                  {resourceType === resource && (
                    <span className="absolute inset-y-0 right-0 flex items-center pr-4">
                      <svg className="h-5 w-5 text-blue-600" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                      </svg>
                    </span>
                  )}
                </li>
              ))}
            </ul>
          </div>
        )}
      </div>
      
      {/* –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ */}
      <div className="mb-4">
        <label className="block text-sm font-medium text-gray-700 mb-2">
          –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ
          {listingType === 'sell' && (
            <span className="text-gray-500 ml-2">
              (–¥–æ—Å—Ç—É–ø–Ω–æ: {availableAmount.toFixed(0)})
            </span>
          )}
        </label>
        <input
          type="number"
          min="1"
          value={amount}
          onChange={(e) => setAmount(Math.max(1, parseInt(e.target.value) || 0))}
          className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
        />
      </div>
      
      {/* –¶–µ–Ω–∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É */}
      <div className="mb-4">
        <label className="block text-sm font-medium text-gray-700 mb-2">–¶–µ–Ω–∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É (–∑–æ–ª–æ—Ç–æ)</label>
        <input
          type="number"
          min="1"
          value={pricePerUnit}
          onChange={(e) => setPricePerUnit(Math.max(1, parseInt(e.target.value) || 0))}
          className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
        />
      </div>
      
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–¥–µ–ª–∫–µ */}
      <div className="mb-4 p-3 bg-gray-50 rounded-md">
        <div className="flex justify-between">
          <span className="font-medium">–ò—Ç–æ–≥–æ:</span>
          <span className="font-medium">
            {listingType === 'sell' ? `–ü–æ–ª—É—á–∏—Ç–µ: ${totalPrice} üí∞` : `–û—Ç–¥–∞–¥–∏—Ç–µ: ${totalPrice} üí∞`}
          </span>
        </div>
        {listingType === 'buy' && (
          <div className="mt-1 text-sm text-gray-600">
            {gameState.resources.gold < totalPrice ? (
              <span className="text-red-600">–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏</span>
            ) : (
              <span>–ü–æ—Å–ª–µ —Å–¥–µ–ª–∫–∏ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è: {gameState.resources.gold - totalPrice} üí∞</span>
            )}
          </div>
        )}
        {listingType === 'sell' && availableAmount < amount && (
          <div className="mt-1 text-sm text-red-600">
            –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏
          </div>
        )}
      </div>
      
      {error && (
        <div className="mb-4 p-3 bg-red-50 text-red-700 rounded-md">
          {error}
        </div>
      )}
      
      <button
        type="button"
        onClick={handleCreateListing}
        disabled={!canCreateListing() || loading}
        className={`w-full px-4 py-2 rounded-md ${
          canCreateListing() && !loading
            ? 'bg-blue-600 text-white hover:bg-blue-700'
            : 'bg-gray-300 text-gray-500 cursor-not-allowed'
        }`}
      >
        {loading ? '–û–±—Ä–∞–±–æ—Ç–∫–∞...' : '–°–æ–∑–¥–∞—Ç—å –ª–æ—Ç'}
      </button>
    </div>
  );
}
